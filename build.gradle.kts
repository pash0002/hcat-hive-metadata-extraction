/*
 * This file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
  // Apply the Kotlin JVM plugin to add support for Kotlin.
  id("org.jetbrains.kotlin.jvm") version "1.3.71"
  id("com.github.johnrengelman.shadow") version "4.0.4"
}

repositories {
  // Use jcenter for resolving dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

configurations.all {
  exclude("org.slf4j", "slf4j-log4j12")
}

dependencies {
  //    implementation("org.apache.hive.hcatalog:hive-hcatalog-core:3.1.0") {
//        exclude("org.apache.calcite", "calcite-core")
//    }
//    implementation("org.apache.hive.hcatalog:hive-webhcat-java-client:3.1.0") {
//        exclude( "org.apache.calcite", "calcite-core")
//        exclude("javax.jms", "jms")
//    }

  implementation("org.apache.hive.hcatalog:hive-hcatalog-core:1.2.1") {
    exclude("org.apache.calcite", "calcite-core")
    exclude("org.slf4j", "slf4j-log4j12")
  }
  implementation("org.apache.hive.hcatalog:hive-webhcat-java-client:1.2.1") {
    exclude("org.apache.calcite", "calcite-core")
    exclude("javax.jms", "jms")
    exclude("org.slf4j", "slf4j-log4j12")
  }
  implementation("org.apache.hadoop:hadoop-common:2.10.1")
  implementation("org.apache.hadoop:hadoop-mapreduce-client-core:2.10.1")

  implementation("com.fasterxml.jackson.core:jackson-databind:2.11.3")

  implementation("org.apache.logging.log4j:log4j-api-kotlin:1.0.0")
  implementation("org.apache.logging.log4j:log4j-api:2.11.1")
  implementation("org.apache.logging.log4j:log4j-core:2.11.1")

  implementation("org.jetbrains.kotlin:kotlin-reflect:1.3.71")

  // Use the Kotlin test library.
  testImplementation("org.jetbrains.kotlin:kotlin-test")

  // Use the Kotlin JUnit integration.
  testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

}

tasks {
  val sourcesJar by creating(Jar::class) {
    archiveClassifier.set("sources")
    from(sourceSets.main.get().allSource)
  }

  artifacts {
    archives(sourcesJar)
    archives(jar)
  }
}

tasks.withType<Jar> {
  manifest {
    attributes(mapOf(
        "Main-Class" to "com.datametica.extraction.hive.MetadataExtractionMain"
    ))
  }
}
